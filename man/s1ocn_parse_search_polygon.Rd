% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s1ocn_list_files.R
\name{s1ocn_parse_search_polygon}
\alias{s1ocn_parse_search_polygon}
\title{Parse and Format a Search Polygon for URL Encoding}
\usage{
s1ocn_parse_search_polygon(search_polygon)
}
\arguments{
\item{search_polygon}{An object representing a search polygon. The input can be:
\itemize{
\item An \code{sf} polygon object
\item A matrix or data frame representing the polygon coordinates
\item A character string in Well-Known Text (WKT) format
If the input is \code{NULL}, \code{NA}, or otherwise invalid, the function defaults to using a worldwide polygon.
}}
}
\value{
A character string representing the search polygon in WKT format, with spaces replaced by \verb{\%20} for
URL encoding. This string can be used in queries that require a properly formatted polygon parameter.
}
\description{
This function processes an input representing a search polygon, converts it to a valid Well-Known Text (WKT)
format, and ensures it is properly URL-encoded. The function supports inputs in various formats including
\code{sf} polygon objects, matrices, data frames, and WKT strings. If the input cannot be converted to a valid polygon,
the function defaults to a worldwide search polygon.
}
\details{
The function performs the following steps:
\enumerate{
\item \strong{Input Type Checking and Conversion:} The function checks if the input is a polygon. If it is a data frame,
it converts it to a matrix. If it is a matrix, it attempts to convert it to an \code{sf} polygon. If it is a character
string, it attempts to parse it as WKT.
\item \strong{Validation:} After conversion, the function validates the \code{sf} object to ensure it is a valid polygon. If the
validation fails, the function defaults to a pre-defined worldwide search polygon.
\item \strong{WKT Formatting and URL Encoding:} The valid polygon is then converted to WKT format, and all spaces in the
WKT string are replaced with \verb{\%20} to ensure proper URL encoding.
}

The default search polygon is a rectangle that covers the entire globe, with coordinates (-90, -180), (-90, 180),
(90, 180), and (90, -180).
}
\examples{
\dontrun{
# Example 1: Valid sf polygon input
polygon <- sf::st_polygon(list(
matrix(c(-10, -10, 10, -10, 10, 10, -10, 10, -10, -10), ncol = 2, byrow = TRUE)
))
s1ocn_parse_search_polygon(polygon)
# Returns: "POLYGON\%20((-10\%20-10,\%2010\%20-10,\%2010\%2010,\%20-10\%2010,\%20-10\%20-10))"

# Example 2: Valid data frame input
df <- data.frame(x = c(-10, 10, 10, -10, -10), y = c(-10, -10, 10, 10, -10))
s1ocn_parse_search_polygon(df)
# Returns: "POLYGON\%20((-10\%20-10,\%2010\%20-10,\%2010\%2010,\%20-10\%2010,\%20-10\%20-10))"

# Example 3: Valid WKT string input
wkt <- "POLYGON((-10 -10, 10 -10, 10 10, -10 10, -10 -10))"
s1ocn_parse_search_polygon(wkt)
# Returns: "POLYGON\%20((-10\%20-10,\%2010\%20-10,\%2010\%2010,\%20-10\%2010,\%20-10\%20-10))"

# Example 4: Invalid input defaults to worldwide polygon
s1ocn_parse_search_polygon("invalid input")
# Returns: "POLYGON\%20((-90\%20-180,\%20-90\%20180,\%2090\%20180,\%2090\%20-180,\%20-90\%20-180))"
}

}
